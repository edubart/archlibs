pkgname=lib32-boost
pkgver=1.50.0
_boostver=1_50_0
pkgrel=1
pkgdesc="Free peer-reviewed portable C++ source libraries - Runtime (32bit)"
arch=('x86_64')
url="http://www.boost.org"
license=('custom')
groups=('lib32')
depends=('lib32-bzip2' 'lib32-zlib' 'lib32-gcc-libs')
makedepends=('icu' 'gcc-multilib')
source=(http://downloads.sourceforge.net/sourceforge/boost/boost_${_boostver}.tar.gz
dont_use_fchmodat.patch)
md5sums=('dbc07ab0254df3dda6300fd737b3f264'
         '3b3112f76638d4bad9e6f490708b78d8')

_stagedir="${srcdir}/stagedir"

build()
{
    export CFLAGS="${CFLAGS} -march=i686 -m32"
    export CXXFLAGS="${CXXFLAGS} -march=i686 -m32"
    export LDFLAGS="${LDFLAGS} -march=i686 -m32"
    export PKG_CONFIG_PATH="/usr/lib32/pkgconfig"

    cd "${srcdir}/boost_${_boostver}"
    patch -p1 -i $srcdir/dont_use_fchmodat.patch

    # set python path for bjam
    cd "${srcdir}/boost_${_boostver}/tools"

    # build bjam
    cd "${srcdir}/boost_${_boostver}/tools/build/v2/engine"
    ./build.sh cc

    _bindir="bin.linuxx86"

    install -d "${_stagedir}"/usr/bin
    install ${_bindir}/bjam "${_stagedir}"/usr/bin/bjam

    # build bcp
    cd "${srcdir}/boost_${_boostver}/tools/bcp"
    ../build/v2/engine/${_bindir}/bjam --toolset=gcc
    install -m755 "${srcdir}/boost_${_boostver}/dist/bin/bcp" \
                    ${_stagedir}/usr/bin/bcp

    # build libs
    cd "${srcdir}/boost_${_boostver}"

    # default "minimal" install: "release link=shared,static
    # runtime-link=shared threading=single,multi"
    # --layout=tagged will add the "-mt" suffix for multithreaded libraries
    # and installs includes in /usr/include/boost.
    # --layout=system no longer adds the -mt suffix for multi-threaded libs.
    # install to ${_stagedir} in preparation for split packaging

    ./tools/build/v2/engine/${_bindir}/bjam \
        release debug-symbols=off threading=multi \
        runtime-link=shared link=shared,static \
        cflags=-fno-strict-aliasing \
        boost.locale.icu=off \
        toolset=gcc \
        address-model=32 \
        --without-python \
        --without-mpi \
        --prefix="${_stagedir}" \
        -sTOOLS=gcc \
        --layout=system \
        ${MAKEFLAGS} \
        install
}

package() 
{
    install -d "${pkgdir}/usr/lib32"

    cp -r "${_stagedir}"/lib/*.so{,.*} "${pkgdir}/usr/lib32/"
    cp -r "${_stagedir}"/lib/*.a "${pkgdir}/usr/lib32/"
}
