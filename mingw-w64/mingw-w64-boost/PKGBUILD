# Maintainer: Daniel Kirchner <daniel@ekpyron.org>
# Based on mingw32-boost

pkgname=mingw-w64-boost
pkgver=1.54.0
_boostver=${pkgver//./_}
pkgrel=2
pkgdesc="Free peer-reviewed portable C++ source libraries (mingw-w64)"
arch=('any')
_arch_target32=i686-w64-mingw32
_arch_target64=x86_64-w64-mingw32
url="http://www.boost.org/"
license=('custom')
depends=('mingw-w64-crt' 'mingw-w64-zlib' 'mingw-w64-bzip2')
# Depends on native Boost so we can use its bjam instead of building it ourself first
makedepends=('mingw-w64-gcc' 'boost' 'bzip2')
options=(!strip !buildflags staticlibs)
source=(http://downloads.sourceforge.net/sourceforge/boost/boost_${_boostver}.tar.bz2 boost-mingw.patch)
md5sums=('15cb8c0803064faef0c4ddf5bc5ca279'
         '01f5f0d6b915d3b04dbabfd6db40f1e9')

package() {
    cd "${srcdir}/boost_${_boostver}_32"

    /usr/bin/bjam \
	    toolset=gcc-mingw64 \
		target-os=windows \
		variant=release \
		threading=multi \
		threadapi=win32 \
		link=shared,static \
		runtime-link=shared \
		--prefix=${pkgdir}/usr/${_arch_target32} \
		--user-config=user-config.jam \
		--without-mpi \
		--without-python \
		cxxflags=-std=c++11 \
		address-model=32 \
		architecture=x86 \
		binary-format=pe \
		${MAKEFLAGS} \
		--layout=tagged install

    mkdir -p $pkgdir/usr/${_arch_target32}/bin
    mv $pkgdir/usr/${_arch_target32}/lib/*.dll $pkgdir/usr/${_arch_target32}/bin
    ${_arch_target32}-strip -x $pkgdir/usr/${_arch_target32}/bin/*.dll
    ${_arch_target32}-strip -g $pkgdir/usr/${_arch_target32}/lib/*.a

    cd ../boost_${_boostver}
  
    /usr/bin/bjam \
		toolset=gcc-mingw64 \
		target-os=windows \
		variant=release \
		threading=multi \
		threadapi=win32 \
		link=shared,static \
		runtime-link=shared \
		--prefix=${pkgdir}/usr/${_arch_target64} \
		--user-config=user-config.jam \
		--without-mpi \
		--without-python \
		cxxflags=-std=c++11 \
		address-model=64 \
		architecture=x86 \
		binary-format=pe \
		${MAKEFLAGS} \
		--layout=tagged install

    mkdir -p $pkgdir/usr/${_arch_target64}/bin
    mv $pkgdir/usr/${_arch_target64}/lib/*.dll $pkgdir/usr/${_arch_target64}/bin
	${_arch_target64}-strip -x $pkgdir/usr/${_arch_target64}/bin/*.dll
	${_arch_target64}-strip -g $pkgdir/usr/${_arch_target64}/lib/*.a
}

build() {
	unset LDFLAGS CPPFLAGS

	cd "${srcdir}"
	
	cp -r boost_${_boostver} boost_${_boostver}_32
	
	cd boost_${_boostver}_32
	
	patch -Np0 -i "${srcdir}/boost-mingw.patch"

	# 32-bit build
	cat > user-config.jam << EOF
using gcc : mingw64 : ${_arch_target32}-g++
	:
	<rc>${_arch_target32}-windres
	<archiver>${_arch_target32}-ar
;
EOF

	/usr/bin/bjam \
		toolset=gcc-mingw64 \
		target-os=windows \
		variant=release \
		threading=multi \
		threadapi=win32 \
		link=shared,static \
		runtime-link=shared \
		--prefix=${pkgdir}/usr/${_arch_target32} \
		--user-config=user-config.jam \
		--without-mpi \
		--without-python \
		cxxflags=-std=c++11 \
		address-model=32 \
		architecture=x86 \
		binary-format=pe \
		${MAKEFLAGS} \
		--layout=tagged

	cd ../boost_${_boostver}
	
	patch -Np0 -i "${srcdir}/boost-mingw.patch"
	
	# 64-bit build
	cat > user-config.jam << EOF
using gcc : mingw64 : ${_arch_target64}-g++
	:
	<rc>${_arch_target64}-windres
	<archiver>${_arch_target64}-ar
;
EOF

	/usr/bin/bjam \
		toolset=gcc-mingw64 \
		target-os=windows \
		variant=release \
		threading=multi \
		threadapi=win32 \
		link=shared,static \
		runtime-link=shared \
		--prefix=${pkgdir}/usr/${_arch_target64} \
		--user-config=user-config.jam \
		--without-mpi \
		--without-python \
		cxxflags=-std=c++11 \
		address-model=64 \
		architecture=x86 \
		binary-format=pe \
		${MAKEFLAGS} \
		--layout=tagged
}
